name: CI - Backend and Frontend Docker Testing

on:
  push:
    branches:
      - '*'
  # workflow_dispatch:

jobs:
  backend-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cs360_backend_image_test:latest -f backend/Dockerfile .

      - name: Push Backend Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cs360_backend_image_test:latest


      - name: Pull and Run Backend Container
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/cs360_backend_image_test:latest
          docker run -d --name test-backend-container \
            --memory="8g" \
            --memory-swap="16g" \
            ${{ secrets.DOCKER_USERNAME }}/cs360_backend_image_test:latest \
            tail -f /dev/null
      
      - name: Run Backend Tests
        run: |
          docker ps
          docker exec test-backend-container sh -c "npm install --force && npm run test"

      - name: Backend Cleanup
        if: always()
        run: |
          docker stop test-backend-container || true
          docker rm test-backend-container || true

  frontend-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cs360_frontend_image_test:latest -f client/Dockerfile .
          
      - name: Push Frontend Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cs360_frontend_image_test:latest
      
      - name: Pull and Run Frontend Container
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/cs360_frontend_image_test:latest
          docker run -d --name test-frontend-container \
            --memory="8g" \
            --memory-swap="16g" \
            ${{ secrets.DOCKER_USERNAME }}/cs360_frontend_image_test:latest \
            tail -f /dev/null

      - name: Install Dependencies and Run Frontend Tests
        run: |
          docker exec test-frontend-container sh -c "npm install --force && npm install sweetalert2 --force && npm run test"

      - name: Frontend Cleanup
        if: always()
        run: |
          docker stop test-frontend-container || true
          docker rm test-frontend-container || true